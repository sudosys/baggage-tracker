// <auto-generated />
using BaggageTrackerApi;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BaggageTrackerApi.Migrations
{
    [DbContext(typeof(BaggageTrackerDbContext))]
    [Migration("20240504134704_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BaggageTrackerApi.Entities.Baggage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("BaggageStatus")
                        .HasColumnType("integer");

                    b.Property<string>("TagNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("bt_baggages");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BaggageStatus = 0,
                            TagNumber = "T436712",
                            UserId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            BaggageStatus = 0,
                            TagNumber = "T377053",
                            UserId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            BaggageStatus = 0,
                            TagNumber = "T205967",
                            UserId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            BaggageStatus = 0,
                            TagNumber = "T519736",
                            UserId = 2L
                        },
                        new
                        {
                            Id = 5L,
                            BaggageStatus = 0,
                            TagNumber = "T724821",
                            UserId = 3L
                        },
                        new
                        {
                            Id = 6L,
                            BaggageStatus = 0,
                            TagNumber = "T541263",
                            UserId = 3L
                        });
                });

            modelBuilder.Entity("BaggageTrackerApi.Entities.Flight", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("bt_flights");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            FlightNumber = "TK5094",
                            UserId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            FlightNumber = "TK5094",
                            UserId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            FlightNumber = "TK2745",
                            UserId = 3L
                        });
                });

            modelBuilder.Entity("BaggageTrackerApi.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("bt_users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            FullName = "Avery Thompson",
                            Password = "711f24d8676c4462bcb9b8d6ff12e524483afcff5ea9ba726fba772c296b214c",
                            Role = 0,
                            Username = "avery.thompson"
                        },
                        new
                        {
                            Id = 2L,
                            FullName = "Sebastian Morales",
                            Password = "46498d3d669434f320a45770a9b8ab8cbc16bd7dfeeb724c5503b2cb9d3d395e",
                            Role = 0,
                            Username = "sebastian.morales"
                        },
                        new
                        {
                            Id = 3L,
                            FullName = "Olivia Martinez",
                            Password = "0cc4bbe5ac4df909798c2ccd0844f15a86a694457758e42d9ce52e7d39e9e256",
                            Role = 0,
                            Username = "olivia.martinez"
                        });
                });

            modelBuilder.Entity("BaggageTrackerApi.Entities.Baggage", b =>
                {
                    b.HasOne("BaggageTrackerApi.Entities.User", "User")
                        .WithMany("Baggages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BaggageTrackerApi.Entities.Flight", b =>
                {
                    b.HasOne("BaggageTrackerApi.Entities.User", "User")
                        .WithOne("ActiveFlight")
                        .HasForeignKey("BaggageTrackerApi.Entities.Flight", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BaggageTrackerApi.Entities.User", b =>
                {
                    b.Navigation("ActiveFlight")
                        .IsRequired();

                    b.Navigation("Baggages");
                });
#pragma warning restore 612, 618
        }
    }
}
